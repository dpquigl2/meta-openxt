#! /bin/sh
#
# Copyright (c) 2014 Citrix Systems, Inc.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

set -e

# /etc/init.d/ssh: start and stop the OpenBSD "secure shell" daemon

test -x /usr/sbin/sshd || exit 0
( /usr/sbin/sshd -\? 2>&1 | grep -q OpenSSH ) 2>/dev/null || exit 0

if test -f /etc/default/ssh; then
    . /etc/default/ssh
fi

make_dir() {
	# create keys if necessary
    	if [ ! -d /etc/ssh ]; then
	    	echo "  creating /etc/ssh..."
		mkdir -p /etc/ssh
		[ -x /sbin/restorecon ] && /sbin/restorecon /etc/ssh
		chmod 0700 /etc/ssh
	fi
}

is_enabled() {
    # forget it if we're trying to start, and enable-v4v-ssh is not set in xec
    if [ -e /config/etc/ssh/disable-v4v ]; then 
        echo "OpenBSD Secure Shell server not in use (internal SSH access disabled)"
        return 1
    fi

    return 0
}


check_privsep_dir() {
    # Create the PrivSep empty dir if necessary
    if [ ! -d /var/run/sshd ]; then
	mkdir -p /var/run/sshd
	[ -x /sbin/restorecon ] && /sbin/restorecon /var/run/sshd
	chmod 0755 /var/run/sshd
    fi
}

check_config() {
	/usr/sbin/sshd -t -f /etc/ssh/sshd_config_v4v || exit 1
}

check_keys() {
	if [ ! -f /etc/ssh/ssh_host_rsa_key_v4v ]; then
		echo "  generating ssh RSA key..."
		ssh-keygen -q -f /etc/ssh/ssh_host_rsa_key_v4v -N '' -t rsa
	fi
	if [ ! -f /etc/ssh/ssh_host_dsa_key_v4v ]; then
		echo "  generating ssh DSA key..."
		ssh-keygen -q -f /etc/ssh/ssh_host_dsa_key_v4v -N '' -t dsa
	fi
}

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

case "$1" in
  start)
	make_dir
	is_enabled || exit 0
	echo "Starting OpenBSD Secure Shell server (v4v socket): sshd"
	check_keys
	check_privsep_dir
	INET_IS_V4V=1 \
	  LD_PRELOAD=/usr/lib/libv4v-1.0.so.0 \
	  start-stop-daemon -S -p /var/run/sshd-v4v.pid -x /usr/sbin/sshd -- -f /etc/ssh/sshd_config_v4v -o PidFile=/var/run/sshd-v4v.pid -o Port=2222
	[ -x /sbin/restorecon ] && restorecon -R /var/run
        echo "done."
	;;
  stop)
        echo -n "Stopping OpenBSD Secure Shell server (v4v socket): sshd"
	start-stop-daemon -K -x /usr/sbin/sshd -p /var/run/sshd-v4v.pid || true
        echo "."
	;;

  reload|force-reload)
	make_dir
	is_enabled || exit 0
	check_keys
	check_config
        echo -n "Reloading OpenBSD Secure Shell server's configuration"
	start-stop-daemon -K -s 1 -x /usr/sbin/sshd -p /var/run/sshd-v4v.pid
	echo "."
	;;

  restart)
	make_dir
  	check_keys
	check_config
        echo -n "Restarting OpenBSD Secure Shell server: sshd"
	start-stop-daemon -K -x /usr/sbin/sshd -p /var/run/sshd-v4v.pid || true
	sleep 1
	is_enabled || exit 0
	INET_IS_V4V=1 \
	  LD_PRELOAD=/usr/lib/libv4v-1.0.so.0 \
	  start-stop-daemon -S -p /var/run/sshd-v4v.pid -x /usr/sbin/sshd -- -f /etc/ssh/sshd_config_v4v -o PidFile=/var/run/sshd-v4v.pid -o Port=2222
	check_privsep_dir
	echo "."
	;;

  enabled)
	is_enabled || exit 1
	exit 0
	;;

  *)
	echo "Usage: /etc/init.d/ssh_v4v {start|stop|reload|force-reload|restart}"
	exit 1
esac

exit 0
