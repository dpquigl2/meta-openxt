--- a/dojo-release-1.7.2-src/util/build/transforms/copy.js	2012-07-17 13:38:34.000000000 +0000
+++ b/dojo-release-1.7.2-src/util/build/transforms/copy.js	2012-07-17 13:44:53.000000000 +0000
@@ -1,15 +1,25 @@
 define(["../buildControl", "../process", "../fileUtils", "dojo/has"], function(bc, process, fileUtils, has) {
 	return function(resource, callback) {
 		fileUtils.ensureDirectoryByFilename(resource.dest);
-		var
-			cb= function(code, text){
-				callback(resource, code);
-			},
-			errorMessage= "failed to copy file from \"" + resource.src + "\" to \"" + resource.dest + "\"",
-			args= has("is-windows") ?
-				["cmd", "/c", "copy", fileUtils.normalize(resource.src), fileUtils.normalize(resource.dest), errorMessage, bc, cb] :
-				["cp", resource.src, resource.dest, errorMessage, bc, cb];
-		process.exec.apply(process, args);
-		return callback;
+		if (0) {
+			var
+				cb= function(code, text){
+					callback(resource, code);
+				},
+				errorMessage= "failed to copy file from \"" + resource.src + "\" to \"" + resource.dest + "\"",
+				args= has("is-windows") ?
+					["cmd", "/c", "copy", fileUtils.normalize(resource.src), fileUtils.normalize(resource.dest), errorMessage, bc, cb] :
+					["cp", resource.src, resource.dest, errorMessage, bc, cb];
+			process.exec.apply(process, args);
+			return callback;
+		} else {
+			var srcChannel = new java.io.FileInputStream(resource.src).getChannel();
+			var destChannel = new java.io.FileOutputStream(resource.dest).getChannel();
+			destChannel.transferFrom(srcChannel, 0, srcChannel.size());
+			srcChannel.close();
+                	destChannel.close();
+			return;
+		}
+
 	};
 });
